<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd http://www.mulesoft.org/schema/mule/munit-tools http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd ">
    <munit:config name="customer-api-apikit-test.xml" />
    <http:request-config name="HTTP_Request_Configuration" basePath="/api">
        <http:request-connection host="localhost" port="8081" />
    </http:request-config>
    <munit:test name="delete:\customer\(id):customer-api-config-200-application\json-FlowTest" description="Verifying functionality of [delete:\customer\(id):customer-api-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="customer-api-main" />
            <munit:enable-flow-source value="delete:\customer\(id):customer-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <munit-tools:mock-when doc:name="Mock when" doc:id="48083f75-c781-498f-a470-440f6ca7a31b" processor="db:delete">
				<munit-tools:then-return >
					<munit-tools:payload value='#[{
  message: "Number of affected rows: -1"
}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/customer/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[MunitTools::substringpayload[0].message]" is='#[MunitTools::equalTo("Number of affected rows: -1")]' message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" doc:id="7e5a5ec8-5790-42ec-9bd5-dbdbf244eff4"/>
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\customer\(id):customer-api-config-404-application\json-FlowTest" description="Verifying functionality of [delete:\customer\(id):customer-api-config-404-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="customer-api-main" />
            <munit:enable-flow-source value="delete:\customer\(id):customer-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/customer/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="404" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_404_customer_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\customer:customer-api-config-200-application\json-FlowTest" description="Verifying functionality of [get:\customer:customer-api-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="customer-api-main" />
            <munit:enable-flow-source value="get:\customer:customer-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/customer">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_200_customer_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\customer:customer-api-config-404-application\json-FlowTest" description="Verifying functionality of [get:\customer:customer-api-config-404-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="customer-api-main" />
            <munit:enable-flow-source value="get:\customer:customer-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/customer">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="404" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_404_customer_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\customer\(id):customer-api-config-200-application\json-FlowTest" description="Verifying functionality of [get:\customer\(id):customer-api-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="customer-api-main" />
            <munit:enable-flow-source value="get:\customer\(id):customer-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/customer/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_200_customer_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\customer\(id):customer-api-config-404-application\json-FlowTest" description="Verifying functionality of [get:\customer\(id):customer-api-config-404-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="customer-api-main" />
            <munit:enable-flow-source value="get:\customer\(id):customer-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/customer/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="404" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_404_customer_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\customer:application\json:customer-api-config-201-application\json-FlowTest" description="Verifying functionality of [post:\customer:application\json:customer-api-config-201-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="customer-api-main" />
            <munit:enable-flow-source value="post:\customer:application\json:customer-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_customer_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/customer">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 201" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_201_customer_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\customer:application\json:customer-api-config-404-application\json-FlowTest" description="Verifying functionality of [post:\customer:application\json:customer-api-config-404-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="customer-api-main" />
            <munit:enable-flow-source value="post:\customer:application\json:customer-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_customer_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/customer">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="404" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_404_customer_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
</mule>
